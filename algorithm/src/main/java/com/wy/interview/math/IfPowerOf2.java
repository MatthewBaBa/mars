package com.wy.interview.math;

/**
 * 如何快速判断一个正整数是否2的幂次方
 * 开篇，就谈谈如何判断一个正整数是否是2的幂吧，不用递归~。
 * 1、基础知识：
 * 我们知道在计算机中，是以补码表示数的，正数的补码是其本身，如3，在计算机中的表示就是0x00000003 ;而负数的补码则是：在原码的基础上，保留符号位不变，其它位求反，再将结果+1，如-3在计算中的表示就是:原码0x80000003，其补码为（0xffffffffc+1 = 0xfffffffd）。
 * 2、转变为等价命题
 * 若一个正数是2的幂，则这个数在计算中的表示肯定是以下形式：0x00...1000...b省略号表示若干个0.问题就转变为一个等价的命题：如何判断给定的一个正整数是如0x00...1000...b这种形式（二进制表示式中只有唯一的一个1，且不位于最后一位和最高位）。（b表示是以二进制表示的）
 * 3、求解
 * 在将原问题转化后，似乎已经可以看出答案了。
 * 给点一个正整数n，如果它是2的幂，则满足 n & (n-1) = 0;举个特例，如n = 8,即0x1000b，则0x1000b & 0x0111 = 0.
 * 而对于非2的幂的整数 n & (n-1) = 0肯定不等于0. 因为若n不是2的幂，则n的二进制表示中1的个数肯定大于一个，而n&(n-1)则肯定不等于0.
 *
 * @author matthew_wu
 * @since 2021/2/20 4:16 下午
 */
public class IfPowerOf2 {

}
